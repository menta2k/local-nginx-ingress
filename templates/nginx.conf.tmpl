# Generated by local-nginx-ingress at {{ .Generated.Format "2006-01-02 15:04:05" }}
# DO NOT EDIT THIS FILE MANUALLY

{{- range .Upstreams }}

upstream {{ .Name }} {
    {{- if eq .Method "least_conn" }}
    least_conn;
    {{- else if eq .Method "ip_hash" }}
    ip_hash;
    {{- end }}
    
    {{- range .Servers }}
    server {{ .Address }}{{ if .Weight }} weight={{ .Weight }}{{ end }}{{ if .Backup }} backup{{ end }};
    {{- end }}
    
    {{- if .HealthCheck }}
    # Health check configuration would go here
    # Note: requires nginx-plus or third-party module
    {{- end }}
}
{{- end }}

{{- range .Servers }}

server {
    {{- range .Listen }}
    listen {{ . }};
    {{- end }}
    server_name {{ .ServerName }};
    
    {{- if .SSL.Enabled }}
    ssl_certificate {{ .SSL.Certificate }};
    ssl_certificate_key {{ .SSL.PrivateKey }};
    ssl_protocols {{ join .SSL.Protocols " " }};
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    {{- end }}
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    {{- if .ServerSnippet }}
    # Custom server configuration
    {{ .ServerSnippet }}
    {{- end }}
    
    {{- $locations := sortLocationsByPriority .Locations }}
    {{- range $locations }}
    
    location {{ .Path }} {
        {{- if .CORS.Enabled }}
        # CORS headers
        {{- range .CORS.AllowOrigins }}
        add_header 'Access-Control-Allow-Origin' '{{ . }}' always;
        {{- end }}
        {{- if .CORS.AllowMethods }}
        add_header 'Access-Control-Allow-Methods' '{{ join .CORS.AllowMethods "," }}' always;
        {{- end }}
        {{- if .CORS.AllowCredentials }}
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        {{- end }}
        {{- end }}
        
        {{- if .Auth }}
        {{- if eq .AuthType "basic" }}
        auth_basic "Restricted Area";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;
        {{- end }}
        {{- end }}
        
        {{- if .FastCGI.Enabled }}
        # FastCGI configuration - handle all requests through FastCGI
        {{- if .FastCGI.Index }}
        fastcgi_index {{ .FastCGI.Index }};
        {{- end }}
        
        # Default FastCGI parameters
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param DOCUMENT_URI $document_uri;
        fastcgi_param DOCUMENT_ROOT $document_root;
        fastcgi_param SERVER_PROTOCOL $server_protocol;
        fastcgi_param REQUEST_SCHEME $scheme;
        fastcgi_param HTTPS $https if_not_empty;
        fastcgi_param GATEWAY_INTERFACE CGI/1.1;
        fastcgi_param SERVER_SOFTWARE nginx/$nginx_version;
        fastcgi_param REMOTE_ADDR $remote_addr;
        fastcgi_param REMOTE_PORT $remote_port;
        fastcgi_param SERVER_ADDR $server_addr;
        fastcgi_param SERVER_PORT $server_port;
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_param REDIRECT_STATUS 200;
        
        # Custom FastCGI parameters (these override defaults)
        {{- range $key, $value := .FastCGI.Params }}
        fastcgi_param {{ $key }} {{ $value }};
        {{- end }}
        
        # Pass to FastCGI backend
        fastcgi_pass {{ .FastCGI.Pass }};
        {{- else }}
        # Proxy settings
        proxy_pass {{ .ProxyPass }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        {{- range $key, $value := .ProxyHeaders }}
        proxy_set_header {{ $key }} {{ $value }};
        {{- end }}
        {{- end }}
        
        {{- if .ConfigurationSnippet }}
        # Custom location configuration
        {{ .ConfigurationSnippet }}
        {{- end }}
    }
    {{- end }}
}
{{- end }}